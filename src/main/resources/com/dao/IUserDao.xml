<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.IUserDao">

    <resultMap id="UserTeam" type="User">
        <id property="Id" column="Id"></id>
        <result property="Username" column="username"></result>
        <result property="Password" column="password"></result>
        <result property="Nickname" column="nickname"></result>
        <!--user对象中Team集合-->
        <collection property="teamList"  ofType="Team">
            <id property="tid" column="tid"></id>
            <result property="teamName" column="name"></result>
            <result property="type" column="type"></result>
            <result property="teamInfo" column="info"></result>
        </collection>
    </resultMap>

    <!--查询所有 -->
    <select id="FindAll" resultType="com.domain.User">
        select * from account
    </select>

    <!-- 按用户名查询（模糊搜索）  -->
    <select id="FindByNickName" resultType="com.domain.User" parameterType="String" >
        select * from account where NickName like #{Nickname}
    </select>

    <!--按Id查询-->
    <select id="FindById" resultType="com.domain.User" parameterType="Int">
        select * from account where username = #{uid}
    </select>

<!--    &lt;!&ndash;按用户名查找密码：用于登陆身份验证&ndash;&gt;-->
<!--    <select id="FindPswd" resultType="String" parameterType="String">-->
<!--        select Password from account where UserName = #{username};-->
<!--    </select>-->
    <select id="FindWhenLogin" resultType="com.domain.User" parameterType="String">
        select * from account where username = #{username} and password = #{password}
    </select>

    <!--根据条件查询用户-->
    <select id="FindByCondition"  resultType="com.domain.User" parameterType="com.domain.User">
        select * from account where 1=1
        <if test="Username!=null">
         and nickname like #{Username}
        </if>
    </select>
    <!--保存/增加用户-->
    <insert id="saveUser" parameterType="com.domain.User">
        insert into account(Username,Password,NickName)values(#{Username},#{Password},#{NickName});
    </insert>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="string">
        delete form account where UserName = #{Username}
    </delete>

    <!--修改/更新用户-->
    <update id="updateUser" parameterType="com.domain.User">
        update account set UserName=#{Username},Password=#{Password},NickName=#{NickName} where Id=#{Id}
    </update>

</mapper>
